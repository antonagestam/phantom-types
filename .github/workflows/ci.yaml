name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Static analysis
    uses: antonagestam/goose/.github/workflows/run.yaml@0.9.0

  type-check:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip
          cache-dependency-path: typing-requirements.txt
          check-latest: true
      - name: mypy cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: "${{ runner.os }}-mypy-3.12-${{ hashFiles('typing-requirements.txt') }}"
          restore-keys: |
            ${{ runner.os }}-mypy-3.12
            ${{ runner.os }}-mypy
      - run: pip install --require-hashes --no-dependencies -r typing-requirements.txt
      - run: pip install --no-dependencies .
      - run: mypy

  check-build:
    name: Check packaging metadata
    uses: less-action/reusables/.github/workflows/python-test-build.yaml@main

  docs:
    name: Build Sphinx Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # Keep in sync with version in .readthedocs.yml.
          python-version: "3.11"
          cache: pip
          cache-dependency-path: docs-requirements.txt
      - name: Install dependencies
        run: pip install --require-hashes --no-dependencies -r docs-requirements.txt
      - name: Install package
        run: pip install --no-dependencies .
      - name: Build docs
        run: sphinx-build -W -b html docs docs/_build

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13-dev"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml
      - name: Install minimum requirements
        run: pip install --upgrade '.[test]'
      - name: Run all tests that don't require extra dependencies
        run: >-
          coverage run --append -m pytest
          -m "no_external or not external"
          --ignore=src/phantom/ext
          --ignore=tests/pydantic
          --ignore=tests/ext
      - name: Install extra requirements
        run: pip install --upgrade '.[all,test]'
      - name: Run all tests that require extra dependencies
        run: >-
          coverage run --append -m pytest
          -m "external"
      - name: Collect coverage
        run: |
          coverage report
          coverage xml
      - name: Report coverage
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          fail_ci_if_error: true
          name: codecov-py${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

name: CI
on:
  push:
    branches:
      - main
    tags:
      # Use this pattern here for two reasons:
      # - Release creation might fail, this avoids adding a tag for a release in that
      #   case.
      # - The non-prefixed version tag required for compatibility with Read the docs is
      #   not easy to match.
      # Tags for release requests are prefixed with rr/v, followed by the version.
      - rr/v*
  pull_request:

jobs:
  lint:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  docs:
    name: Build Sphinx Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ammaraskar/sphinx-action@0.4
        with:
          docs-folder: "docs/"

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip
      - run: pip install -e .[iso3166,phonenumbers,test]
      - run: make coverage
      - run: make coverage-report
      - name: Report coverage
        if: |
          github.event_name == 'pull_request'
          && (
            github.event.action == 'opened'
            || github.event.action == 'reopened'
            || github.event.action == 'synchronize'
          )
        uses: 5monkeys/cobertura-action@v7
        with:
          path: coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 80
          show_missing: true
          show_branch: true

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/rr/v')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: pip cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: ${{ runner.os }}-pip
      - name: Install build dependencies
        run: |
          python3 -m pip install --upgrade wheel setuptools .
      - name: Validate version
        id: version
        run: |
          tagged_version=${GITHUB_REF#refs/tags/rr/v}
          code_version=$(python3 -c 'import phantom; print(phantom.__version__)')
          if [[ "$tagged_version" != "$code_version" ]]; then
            echo "Aborting due to version mismatch ðŸ’¥"
            echo "Tagged version: $tagged_version"
            echo "Code version: $code_version"
            exit 1
          fi
          echo "::set-output name=version::$tagged_version"
      - name: Build
        run: make build
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Tag release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          body: ""

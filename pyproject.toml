[build-system]
requires = [
  "setuptools==74.1.2",
  "setuptools-scm==8.1.0",
  "wheel==0.44.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "src/phantom/_version.py"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown; charset=UTF-8"}

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false


[project]
name = "phantom-types"
description = "Phantom types for Python"
requires-python = ">=3.9"
authors = [
  { name="Anton Agestam", email="git@antonagestam.se" },
]
license = {text = "BSD-3-Clause"}
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Development Status :: 5 - Production/Stable",
]
dynamic = ["version", "readme"]
dependencies = [
  # typeguard 4.3.0 breaks "intersection" protocols, see linked issue. I didn't figure
  # out a way to work around this at the moment, so it needs to be pinned.
  # https://github.com/antonagestam/phantom-types/issues/299
  "typeguard>=4,<4.3.0",
  "typing_extensions>=4.3.0",
  "numerary>=0.4.3",
]

[project.optional-dependencies]
phonenumbers = ["phonenumbers>=8.12.41"]
pydantic = ["pydantic>=1.9.0,<2"]
dateutil = ["python-dateutil>=2.8.2"]
hypothesis = ["hypothesis[zoneinfo]>=6.68.0"]
all = [
  "phantom-types[phonenumbers]",
  "phantom-types[pydantic]",
  "phantom-types[dateutil]",
  "phantom-types[hypothesis]",
]
test = [
  "mypy>=0.991",
  "pytest",
  "pytest-mypy-plugins>=1.9.3",
  "coverage",
]
docs = [
  "sphinx",
  "sphinx-autodoc-typehints",
  "furo",
]

[project.urls]
"Source Repository" = "https://github.com/antonagestam/phantom-types/"
"Documentation" = "https://phantom-types.readthedocs.io/en/stable/"


[tool.check-manifest]
ignore = ["src/phantom/_version.py"]


[tool.pip-tools]
generate-hashes = true
strip-extras = true
upgrade = true
all-extras = true
output-file = "docs-requirements.txt"


[tool.black]
target-version = ["py39"]

[tool.pytest.ini_options]
testpaths = ["tests", "src", "docs"]
addopts = "--mypy-ini-file=setup.cfg --mypy-only-local-stub --doctest-modules --import-mode=importlib"
markers = [
  "external: mark tests that require extra dependencies",
  "no_external: mark tests that will fail if run with extra dependencies",
]

[tool.ruff]
fix = true
target-version = "py39"
extend-select = [
  # bugbear
  "B",
  # comprehensions
  "C4",
  # mccabe
  "C90",
  # bandit
  "S",
  # blind exception
  # Bare excepts are caught without this, but this also catches `except Exception: ...`.
  "BLE",
  # builtins
  "A",
  # Enforce valid noqa comments.
  "RUF100",
  # isort
  "I",
  # pycodestyle
  "W",
  # pyupgrade
  "UP",
  # debugger
  "T10",
  # print
  "T20",
  # quotes
  "Q",
  # return
  # This gives 3 false positives, would be nice otherwise probably.
  # "RET",
  # simplify
  "SIM",
  # tidy imports
  # We use this to only outlaw relative parent imports.
  "TID",
]
extend-ignore = [
  # There's no reason to outlaw asserts.
  # https://stackoverflow.com/a/68429294/1220706
  "S101",
]

[tool.ruff.isort]
force-single-line = true
known-first-party = ["phantom", "tests"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "parents"
